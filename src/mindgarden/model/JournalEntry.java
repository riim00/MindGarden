package mindgarden.model;

import java.time.LocalDateTime;

/**
 * Represents a single journal entry written by the user.
 */
public class JournalEntry {

    private int id; // Database primary key
    private String content; // The text content of the journal entry
    private LocalDateTime timestamp;

    // Constructor for creating new entries (ID is auto-generated by DB)
    public JournalEntry(String content) {
        this.content = content;
        this.timestamp = LocalDateTime.now(); // Default to now, DB might override
    }

    // Constructor for loading entries from the database
    public JournalEntry(int id, String content, LocalDateTime timestamp) {
        this.id = id;
        this.content = content;
        this.timestamp = timestamp;
    }

    // Getters
    public int getId() {
        return id;
    }

    public String getContent() {
        return content;
    }

    public LocalDateTime getTimestamp() {
        return timestamp;
    }

    // Setters (optional)
    public void setId(int id) {
        this.id = id;
    }

    public void setContent(String content) {
        this.content = content;
    }

    public void setTimestamp(LocalDateTime timestamp) {
        this.timestamp = timestamp;
    }

    @Override
    public String toString() {
        // Keep it concise for potential list views, maybe just show date/time and start of content
        String shortContent = content.length() > 50 ? content.substring(0, 50) + "..." : content;
        return "JournalEntry{" +
               "id=" + id +
               ", content='" + shortContent + '\'' + // Avoid printing very long content
               ", timestamp=" + timestamp +
               '}';
    }
}
